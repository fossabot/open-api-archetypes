swagger: '2.0'
info:
  description: >-

    ## `Party`

    The `Party` archetype represents an identifiable, addressable entity that
    may have a legal status and that normally has autonomous control over (at
    least some of) its actions.

    ### `PartyIdentifier`


    ### `RegisteredIdentifier`


    ### `Address`


    #### `GeographicAddress`


    #### `TelcomAddress`


    #### `EmailAddress`


    #### `UrlAddress`


    ## `Person`


    ### `IsoSex`


    ### `Gender`


    ### `Ethnicity`


    ### `BodyMetrics`


    ### `PersonName`


    ## `Preference`


    ### `PreferenceType`

    ### `PreferenceOption`

     ## `Organization`
     
     
     ### `OrganizationName`
     
     
     ### `OrganizationUnit`
     
     ### `Company`
     
     
     ### `CompanyGroup`
     
     
     #### `CompanyName`
     
     
     ### `Partnership`
     
     
     ### `SoleProprietor`
     
     
     ## Compliance with standards

    | Standard | Contents |
     -------- | -------- 
     [OMG Party Management Facility Specification](http://www.omg.org/spec/PARTY/1.0/PDF) | A standard that supports party management 
     [ISO 3166](https://www.iso.org/iso-3166-country-codes.html) | Two- and three-letter country codes and country names 
     [ISO 5218](https://www.iso.org/standard/36266.html) | A representation of human sexes 
     [ISO 7250-3:2015](https://www.iso.org/standard/64237.html) | Basic human body measurements for technological design.
     [ITU-T Recommendations](http://www.itu.int/rec/T-REC-E.164/en) | Telecommunication numbering plan 


    ---
  version: 1.0.0
  title: Party
  termsOfService: >-
    https://github.com/gregswindle/archetype-party/blob/master/TERMS_OF_SERVICE.md
  contact:
    email: greg@swindle.net
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: api.swindle.net
basePath: /archetypes/v1/parties
tags:
  - name: parties
    description: 'A list of identifiable, addressable entities.'
  - name: people
    description: A list of human beings.
  - name: preferences
    description: >-
      Choices of (or liking for) something, often from a set of possible or
      offered options.
  - name: organizations
    description: Administrative and functional structures.
schemes:
  - http
  - https
paths:
  /:
    get:
      tags:
        - parties
      summary: Retrieve all Parties.
      description: Retrieve all Parties.
      produces:
        - application/json
        - application/xml
      operationId: getParties
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Party'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
  '/{party-identifier}':
    get:
      tags:
        - parties
      summary: Retrieve a specific Party entity.
      description: Retrieve a Party by its unique identifier.
      produces:
        - application/json
        - application/xml
      operationId: getPartyByPartyIdentifier
      parameters:
        - in: path
          name: party-identifier
          description: The unique identifier of the Party.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Party'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
  /people/:
    get:
      tags:
        - people
      summary: Retrieve all People.
      description: Retrieve all People.
      produces:
        - application/json
        - application/xml
      operationId: getPeople
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
  '/people/{party-identifier}':
    get:
      tags:
        - people
      summary: Retrieve a specific Person entity.
      description: Retrieve a Person by their unique identifier.
      produces:
        - application/json
        - application/xml
      operationId: getPersonByPartyIdentifier
      parameters:
        - in: path
          name: party-identifier
          description: The unique identifier associated with a Person.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Person'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
  /preferences/:
    get:
      tags:
        - preferences
      summary: Retrieve all Preferences.
      description: Retrieve all Preferences.
      produces:
        - application/json
        - application/xml
      operationId: getPreferences
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Preference'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
  '/preferences/{unique-identifier}':
    get:
      tags:
        - preferences
      summary: Retrieve a specific Preference.
      description: Retrieve a Preference by its unique identifier.
      produces:
        - application/json
        - application/xml
      operationId: getPreferenceByUniqueIdentifier
      parameters:
        - in: path
          name: unique-identifier
          description: The unique identifier associated with a Preference.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Preference'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
  /organizations/:
    get:
      tags:
        - organizations
      summary: Retrieve all Organizations.
      description: Retrieve all Organizations.
      produces:
        - application/json
        - application/xml
      operationId: getOrganizations
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
  '/organizations/{party-identifier}':
    get:
      tags:
        - organizations
      summary: Retrieve a specific Organization.
      description: Retrieve a Organization by its unique identifier.
      produces:
        - application/json
        - application/xml
      operationId: getOrganizationByPartyIdentifier
      parameters:
        - in: path
          name: party-identifier
          description: The unique identifier associated with an Organization.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '400':
          description: Bad Request.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/400.schema.json
        '401':
          description: Unauthorized.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/401.schema.json
        '403':
          description: Forbidden.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/403.schema.json
        '404':
          description: Not Found.
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/404.schema.json
        '405':
          description: 'Method Not Allowed. '
          schema:
            $ref: >-
              http://api.swindle.net/archetypes/v1/schemas/log/error-response/405.schema.json
definitions:
  EffectiveDates:
    $ref: >-
      http://api.swindle.net/archetypes/v1/schemas/date/effective-dates.schema.json
  UniqueIdentifier:
    allOf:
      - title: UniqueIdentifier
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/party/unique-identifier.schema.json
  IsoCountryCode:
    $ref: >-
      http://api.swindle.net/archetypes/v1/schemas/locale/iso-country-code.schema.json
  Address:
    allOf:
      - properties:
          addressType:
            default: 'null'
            description: The Address sub-type.
            type: string
            enum:
              - EMAIL_ADDRESS
              - GEOGRAPHIC_ADDRESS
              - TELECOM_ADDRESS
              - URL_ADDRESS
          type:
            default: 'null'
            description: 'A string indicating what type of field this is, e.g., "work".'
            type: string
          value:
            default: 'null'
            description: The full address formatted for display.
            type: string
      - $ref: '#/definitions/EffectiveDates'
      - required:
          - addressType
          - value
      - title: Address
  EmailAddress:
    allOf:
      - $ref: '#/definitions/Address'
      - title: EmailAddress
      - properties:
          addressType:
            enum:
              - EMAIL_ADDRESS
  GeographicAddress:
    allOf:
      - $ref: '#/definitions/Address'
      - description: Represents a geographic location at which a Party may be contacted.
      - properties:
          addressType:
            enum:
              - GEOGRAPHIC_ADDRESS
          addressLines:
            description: >-
              One or more lines that physically identify a location. The first
              line of an address is often a building name, a building number and
              street, or postal box number; the other address lines are for
              location information that further localizes the physical point of
              contact, e.g., suite or apartment number.
            type: array
            items:
              type: string
          city:
            description: 'The name of a city, town, or locality.'
            type: string
          country:
            $ref: '#/definitions/IsoCountryCode'
          regionOrState:
            description: >-
              The name of a geographical region within a country--in the USA,
              the would be a state; in England, a county; and in Switzerland, a
              canton.
            type: string
          zipOrPostalCode:
            description: A code used to identify a geographic area.
            type: string
      - required:
          - addressLines
          - city
          - regionOrState
          - zipOrPostalCode
      - title: GeographicAddress
  TelecomAddress:
    allOf:
      - $ref: '#/definitions/Address'
      - description: >-
          Represents a number that can contact a telephone, mobile phone, fax,
          pager, or other telephonic device.
      - properties:
          addressType:
            enum:
              - TELECOM_ADDRESS
          areaCode:
            description: The code for an area or city.
            type: string
          countryCode:
            description: The number required to directly dial a particular country.
            type: string
          extension:
            description: An extension accessible via the number.
            type: string
          nationalDirectDialingPrefix:
            description: >-
              The prefix required to make a call within a country between two
              different cities, localities, or areas--generally dropped when
              dialing from outside the country (with some exceptions).
            type: string
          number:
            description: >-
              The "telephone" number, which may be (arbitrarily) formatted into
              one or mnemonic sequences of digits depending on local standards.
            type: string
          physicalType:
            description: The type of device accessed by the TelecomAddress.
            type: string
            enum:
              - phone
              - fax
              - mobile
              - pager
              - sms
      - title: TelecomAddress
  UrlAddress:
    allOf:
      - $ref: '#/definitions/Address'
      - properties:
          addressType:
            enum:
              - URL_ADDRESS
      - description: >-
          The unqiue address of a resource, e.g., Web page, on a computer
          network.
      - title: UrlAddress
  PreferenceOption:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/party/nominative.schema.json
      - required:
          - name
      - properties:
          name:
            description: Specifies the name of a possible option and its description.
          description:
            description: >-
              A statement that explains the characteristics of the
              `PreferenceOption`.
  PreferenceType:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/party/nominative.schema.json
      - description: >-
          Specifies the name, a description, and a range of PreferenceOptions
          for a Preference.
      - properties:
          description:
            description: >-
              Specifies the name, a description, and a range of
              `PreferenceOptions` for a `Preference`.
            type: string
          name:
            description: The classification name of the Perference range.
            type: string
          options:
            description: A collection of one or more PreferenceOptions.
            type: array
            items:
              $ref: '#/definitions/PreferenceOption'
  Preference:
    description: >-
      Represents a Party's expressed choice of (or liking for) something, often
      from a set of possible or offered options.
    type: object
    properties:
      option:
        $ref: '#/definitions/PreferenceOption'
      preferenceWeight:
        type: integer
      type:
        $ref: '#/definitions/PreferenceType'
  RegisteredIdentifier:
    allOf:
      - title: RegisteredIdentifier
      - properties:
          identifier:
            type: string
            description: >-
              A string that signifies a Party. The identifier's value is unique
              in the context of time and the registrationAuthority that assigned
              it.
          registrationAuthority:
            description: >-
              Represents the recognized or statutory body responsible for
              assigning the RegisteredIdentifier and associating it with a
              Party.
            type: string
          type:
            description: A value that classifies the RegisteredIdentifier
            type: string
            enum:
              - VZID
              - ENTERPRISE_ID
              - EMPLID
              - SSN
              - ONE_WORLD
      - $ref: '#/definitions/EffectiveDates'
    type: object
    description: >-
      The RegisteredIdentifier represents an identifier for a Party that has
      been assigned by a recognized or statutory body.
  PartyIdentifier:
    allOf:
      - title: PartyIdentifier
      - $ref: '#/definitions/UniqueIdentifier'
  Party:
    type: object
    description: >-
      Represents an identifiable, addressable entity that may have a legal
      status and that normally has autonomous control over (at least some of)
      its actions.
    properties:
      partyIdentifier:
        type: string
        description: An identifier for the Party that is unique within a given context..
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
        default: '[]'
        description: An array of the Party's addresses.
      description:
        type: string
        default: 'null'
        description: An optional description of the Party.
      preferences:
        description: A list of Preferences associated with the Party.
        type: array
        items:
          $ref: '#/definitions/Preference'
        default: '[]'
      registeredIds:
        type: array
        items:
          $ref: '#/definitions/RegisteredIdentifier'
        default: '[]'
        description: >-
          An identifier for a Party that has been assigend by a recognized or
          statutory body.
  AddressProperties:
    description: Specifies information about an address assigned to a specific Party.
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      party:
        $ref: '#/definitions/Party'
      uses:
        description: Limits the context in which the Address is applicable.
        type: array
        items:
          type: string
          example: []
  Ethnicity:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/party/nominative.schema.json
      - required:
          - name
      - description: >-
          Represents a classification of one or more People according to common
          racial, national, tribal, religious, linguistic, or cultural origin or
          background. Each Person may have zero or more Ethnicities.

          Ethnicities can be used to categorize Preferences by cohorts (and not
          by individual). E.g., Jains are strict vegetarians; Muslims eat meat
          prepared as prescribed by Muslim law.
      - required:
          - name
  IsoSex:
    description: >-
      ISO/IEC 5218:2004 specifies a uniform representation of human sexes for
      the interchange of information. It provides a set of numeric codes that
      are independent of language-derived codes and as such is intended to
      provide a common basis for the international exchange of information
      containing human sex data.
    type: string
    enum:
      - 0 // Not known
      - 1 // Male
      - 2 // Female
      - 9 // Not specified
      - NOTKNOWN // 0
      - MALE // 1
      - FEMALE // 2
      - NOTSPECIFIED // 9
    externalDocs:
      description: 'ISO/IEC 5218:2004: Codes for the representation of human sexes'
      url: 'https://www.iso.org/standard/36266.html'
  Gender:
    description: >-
      Represents the range of characteristics pertaining to, and differentiating
      between, masculinity and femininity. Depending on the context, these
      characteristics may include biological sex (i.e. the state of being male,
      female or an intersex variation which may complicate sex assignment),
      sex-based social structures (including gender roles and other social
      roles), or gender identity. Some cultures have specific gender roles that
      can be considered distinct from male and female, such as the hijra
      (chhaka) of India and Pakistan.
    type: object
    properties:
      name:
        description: The designated name of the Gender.
        type: string
        enum:
          - Agender
          - Androgyne
          - Androgynous
          - Bigender
          - Cis
          - Cisgender
          - Cis Female
          - Cis Male
          - Cis Man
          - Cis Woman
          - Cisgender Female
          - Cisgender Male
          - Cisgender Man
          - Cisgender Woman
          - Female to Male
          - FTM
          - Gender Fluid
          - Gender Nonconforming
          - Gender Questioning
          - Gender Variant
          - Genderqueer
          - Intersex
          - Male to Female
          - MTF
          - Neither
          - Neutrois
          - Non-binary
          - Other
          - Pangender
          - Trans
          - Trans*
          - Trans Female
          - Trans* Female
          - Trans Male
          - Trans* Male
          - Trans Man
          - Trans* Man
          - Trans Person
          - Trans* Person
          - Trans Woman
          - Trans* Woman
          - Transfeminine
          - Transgender
          - Transgender Female
          - Transgender Male
          - Transgender Man
          - Transgender Person
          - Transgender Woman
          - Transmasculine
          - Transsexual
          - Transsexual Female
          - Transsexual Male
          - Transsexual Man
          - Transsexual Person
          - Transsexual Woman
          - Two-Spirit
          - AF-A-A // Androgyne Bisexual Androfemale
          - AF-A-F // Androgyne Homosexual Androfemale
          - AF-A-M // Androgyne Heterosexual Androfemale
          - AF-F-A // Feminine Bisexual Androfemale
          - AF-F-F // Feminine Homosexual Androfemale
          - AF-F-M // Feminine Heterosexual Androfemale
          - AF-M-F // Masculine Bisexual Androfemale
          - AF-M-F // Masculine Homosexual Androfemale
          - AF-M-M // Masculine Heterosexual Androfemale
          - AM-A-A // Androgyne Bisexual Andromale
          - AM-A-F // Androgyne Heterosexual Andromale
          - AM-A-M // Androgyne Homosexual Andromale
          - AM-F-A // Feminine Bisexual Andromale
          - AM-F-F // Feminine Heterosexual Andromale
          - AM-F-M // Feminine Homosexual Andromale
          - AM-M-A // Masculine Bisexual Andromale
          - AM-M-F // Masculine Heterosexual Andromale
          - AM-M-M // Masculine Homosexual Andromale
          - F-A-A  // Androgyne Bisexual Woman
          - F-A-F  // Androgyne Homosexual Woman
          - F-A-M  // Androgyne Heterosexual Woman
          - F-F-A  // Feminine Bisexual Woman
          - F-F-F  // Feminine Homosexual Woman
          - F-F-M  // Feminine Heterosexual Woman
          - F-M-A  // Masculine Bisexual Woman
          - F-M-F  // Masculine Homosexual Woman
          - F-M-M  // Masculine Heterosexual Woman
          - HA-A-A // Androgyne Bisexual Androdite
          - HA-A-F // Androgyne Female-Attracted Androdite
          - HA-A-M // Androgyne Male-Attracted Androdite
          - HA-F-A // Feminine Bisexual Androdite
          - HA-F-F // Feminine Female-Attracted Androdite
          - HA-F-M // Feminine Male-Attracted Androdite
          - HA-M-F // Masculine Bisexual Androdite
          - HA-M-F // Masculine Female-Attracted Androdite
          - HA-M-M // Masculine Male-Attracted Androdite
          - HF-A-A // Androgyne Bisexual Hermaphrofemale
          - HF-A-F // Androgyne Female-Attracted Hermaphrofemale
          - HF-A-M // Androgyne Male-Attracted Hermaphrofemale
          - HF-F-A // Feminine Bisexual Hermaphrofemale
          - HF-F-F // Feminine Female-Attracted Hermaphrofemale
          - HF-F-M // Feminine Male-Attracted Hermaphrofemale
          - HF-M-F // Masculine Bisexual Hermaphrofemale
          - HF-M-F // Masculine Female-Attracted Hermaphrofemale
          - HF-M-M // Masculine Male-Attracted Hermaphrofemale
          - HM-A-A // Androgyne Bisexual Hermaphromale
          - HM-A-F // Androgyne Female-Attracted Hermaphromale
          - HM-A-M // Androgyne Male-Attracted Hermaphromale
          - HM-F-A // Feminine Bisexual Hermaphromale
          - HM-F-F // Feminine Female-Attracted Hermaphromale
          - HM-F-M // Feminine Male-Attracted Hermaphromale
          - HM-M-F // Masculine Bisexual Hermaphromale
          - HM-M-F // Masculine Female-Attracted Hermaphromale
          - HM-M-M // Masculine Male-Attracted Hermaphromale
          - M-A-A  // Androgyne Bisexual Man
          - M-A-F  // Androgyne Heterosexual Man
          - M-A-M  // Androgyne Homosexual Man
          - M-F-A  // Feminine Bisexual Man
          - M-F-F  // Feminine Heterosexual Man
          - M-F-M  // Feminine Homosexual Man
          - M-M-A  // Masculine Bisexual Man
          - M-M-F  // Masculine Heterosexual Man
          - M-M-M  // Masculine Homosexual Man
      description:
        description: A summary or definition of the Gender.
        type: string
        example:
          - Masculine Male-Attracted Androdite
          - Androgyne Male-Attracted Hermaphromale
    externalDocs:
      description: 63 GENDERS
      url: 'https://apath.org/63-genders/'
  BodyMetrics:
    description: >-
      Provides a way to store information about the human body such as size,
      weight, hair color, measurements, and so on. The [ISO
      7250-3:2015](https://www.iso.org/standard/64237.html) maintains basic
      human body measurements for technological design.
    type: object
  PersonName:
    allOf:
      - $ref: '#/definitions/EffectiveDates'
      - description: Represents a name for a `Person`.
      - properties:
          prefix:
            description: 'An honorific such as Ms., Dr., etc.'
            type: array
            items:
              type: string
              example: []
          givenName:
            description: The first name in Western countries.
            type: array
            items:
              type: string
              example: []
          middleName:
            description: Any name other than the given name(s) and the family name(s).
            type: array
            items:
              type: string
              example: []
          familyName:
            description: >-
              The last name in Western countries. This is the only manditory
              component of `PersonName` and the only one used if a `Person` has
              only one name.
          preferredName:
            description: A name (or names) that the person is commonly known by.
            type: array
            items:
              type: string
              example: 'null'
          suffix:
            description: >-
              Potentially a generational label (e.g., Jr., III); a
              qualification, (e.g., Ph.D.).
            type: array
            items:
              type: string
              example: 'null'
          uses:
            description: >-
              A short description of what the name is used for (e.g., a stage
              name or a legal name).
            type: array
            items:
              type: string
              example: 'null'
  Person:
    allOf:
      - $ref: '#/definitions/Party'
      - description: Represents information about a human being.
      - properties:
          dateOfBirth:
            description: The Person's date of birth.
            type: string
            format: date
          ethnicity:
            type: array
            items:
              $ref: '#/definitions/Ethnicity'
          gender:
            $ref: '#/definitions/Gender'
          isoSex:
            $ref: '#/definitions/IsoSex'
          bodyMetrics:
            type: array
            items:
              $ref: '#/definitions/BodyMetrics'
          personName:
            $ref: '#/definitions/PersonName'
          otherPersonNames:
            type: array
            items:
              $ref: '#/definitions/PersonName'
      - required:
          - personName
          - gender
          - isoSex
      - title: Person
  OrganizationName:
    allOf:
      - title: OrganizationName
      - properties:
          name:
            description: The name of the `Organization`.
            type: string
          use:
            description: >-
              The way in which the `OrganizationName` is normally or correctly
              used.
            type: string
      - $ref: '#/definitions/EffectiveDates'
  Organization:
    allOf:
      - $ref: '#/definitions/Party'
      - properties:
          organizationName:
            $ref: '#/definitions/OrganizationName'
          otherOrganizationNames:
            type: array
            items:
              $ref: '#/definitions/OrganizationName'
      - $ref: '#/definitions/EffectiveDates'
      - title: Organization
  OrganizationUnit:
    allOf:
      - $ref: '#/definitions/Organization'
      - description: An Organization that is part of another Organization.
      - title: OrganizationUnit
  Company:
    allOf:
      - $ref: '#/definitions/Organization'
      - description: >-
          Represents an Organization created to make money by selling goods or
          services, with a legal identity that is separate from its owners.
      - title: Company
  CompanyGroup:
    allOf:
      - $ref: '#/definitions/Company'
      - description: >-
          An Organization comprising a collection of Companies that have a legal
          relationship.
      - title: CompanyGroup
  ErrorResponse:
    allOf:
      - $ref: >-
          http://api.swindle.net/archetypes/v1/schemas/log/error-response.schema.json
      - description: >-
          ErrorResponse captures all 4xx class of status codes, for cases in
          which the client seems to have erred. Except when responding to a HEAD
          request, the server SHOULD include an entity containing an explanation
          of the error situation, and whether it is a temporary or permanent
          condition. These status codes are applicable to any request method.
          User agents SHOULD display any included entity to the user.
